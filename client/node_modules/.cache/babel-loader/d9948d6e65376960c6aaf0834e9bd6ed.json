{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Desktop\\\\Sample Codebase\\\\Nestjs User Auth\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport Popup from '../src/components/Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /**const itemsFromBackend = [\n    { id: uuidv4(), content: 'First task'},\n    { id: uuidv4(), content: 'Second task'},\n    { id: uuidv4(), content: 'Struct app'},\n    { id: uuidv4(), content: 'Hello, testing card'}\n  ]\n   const columnsFromBackend = \n    {\n        [uuidv4()]: {\n            name: 'ideas',\n            items: itemsFromBackend\n        },\n        [uuidv4()]: {\n            name: 'this week',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'in progress',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'pending approval',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'approved',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'posted',\n            items: [] \n        }\n  };*/\n  useEffect(() => {\n    axios.get('http://localhost:3003/cards').then(response => {\n      setCards(response.data);\n    });\n  });\n  const [columns, setColumns] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [cardPopup, setCardPopup] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [cardContent, setCardContent] = useState(\"\");\n  const [cardPlatform, setCardPlatform] = useState(\"\");\n  const [listPopup, setListPopup] = useState(false);\n  const [listTitle, setListTitle] = useState(\"\");\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  const addCard = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3003/cards', {\n      title: cardTitle,\n      content: cardContent,\n      platform: cardPlatform\n    }).then(res => {\n      if (!alert('Created card successful')) {\n        window.location.reload();\n      }\n\n      ;\n    });\n  };\n\n  const addList = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3003/columns', {\n      columnName: listTitle\n    }).then(res => {\n      if (!alert('Create list successful')) {\n        window.location.reload();\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: cards.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: value.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: listPopup,\n      setTrigger: setListPopup,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addList,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"List Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: listTitle,\n          onChange: e => {\n            setListTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add new list \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: cardPopup,\n      setTrigger: setCardPopup,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addCard,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: cardTitle,\n          onChange: e => {\n            setCardTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: cardContent,\n          onChange: e => {\n            setCardContent(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: cardPlatform,\n          onChange: e => {\n            setCardPlatform(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add New Card \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bW/DhLt1Bezkbo3x/caoB4dPz90=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bryan/Desktop/Sample Codebase/Nestjs User Auth/client/src/App.js"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","axios","v4","uuidv4","Popup","App","get","then","response","setCards","data","columns","setColumns","cards","cardPopup","setCardPopup","cardTitle","setCardTitle","cardContent","setCardContent","cardPlatform","setCardPlatform","listPopup","setListPopup","listTitle","setListTitle","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","addCard","e","preventDefault","post","title","content","platform","res","alert","window","location","reload","addList","columnName","map","value","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport Popup from '../src/components/Popup';\n\nfunction App() {\n\n  /**const itemsFromBackend = [\n    { id: uuidv4(), content: 'First task'},\n    { id: uuidv4(), content: 'Second task'},\n    { id: uuidv4(), content: 'Struct app'},\n    { id: uuidv4(), content: 'Hello, testing card'}\n  ]\n\n  const columnsFromBackend = \n    {\n        [uuidv4()]: {\n            name: 'ideas',\n            items: itemsFromBackend\n        },\n        [uuidv4()]: {\n            name: 'this week',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'in progress',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'pending approval',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'approved',\n            items: []\n        },\n        [uuidv4()]: {\n            name: 'posted',\n            items: [] \n        }\n  };*/\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3003/cards')\n      .then((response) => {\n        setCards(response.data);\n      })\n  })\n\n  const [ columns, setColumns ] = useState([]);\n  const [ cards, setCards ] = useState([]);\n\n  const [ cardPopup, setCardPopup ] = useState(false);\n  const [ cardTitle, setCardTitle ] = useState(\"\");\n  const [ cardContent, setCardContent ] = useState(\"\");\n  const [ cardPlatform, setCardPlatform ] = useState(\"\");\n\n  const [ listPopup, setListPopup ] = useState(false);\n  const [ listTitle, setListTitle ] = useState(\"\");\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId]\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [ removed ] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      })\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [ removed ] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  const addCard = (e) => {\n    e.preventDefault();\n    axios\n      .post('http://localhost:3003/cards', {\n        title: cardTitle,\n        content: cardContent,\n        platform: cardPlatform\n      })\n      .then((res) => {\n        if(!alert('Created card successful')) {\n          window.location.reload();\n        };\n      });\n  }\n\n  const addList = (e) => {\n    e.preventDefault();\n    axios\n      .post('http://localhost:3003/columns', {\n        columnName: listTitle\n      })\n      .then((res) => {\n        if(!alert('Create list successful')) {\n          window.location.reload();\n        };\n      });\n  }\n\n  return (\n    <div>\n     {/**<h1 style={{ marginTop: '40px',textAlign: 'center', color: '#242835', fontSize: 50, fontWeight: 800}}>content workflow</h1>\n      <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n        <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\n          {Object.entries(columns).map(([id, column]) => {\n            return (\n              <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                <h2 style={{ color: '#059A9D', fontSize: 22}}>{column.name}</h2>\n                <div style={{ margin: 8 }}>\n                  <Droppable droppableId={id} key={id}>\n                    {(provided, snapshot) => {\n                      return (\n                        <div \n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          style={{\n                            background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                            padding: 10,\n                            width: 230,\n                            minHeight: 50,\n                            borderRadius: 10\n                          }}\n                        >\n                          {column.items.map((item, index) => {\n                            return (\n                              <div>\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                  {(provided, snapshot) => {\n                                    return (\n                                      <div ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                          style={{\n                                            userSelect: 'none',\n                                            padding: 16,\n                                            margin: '0 0 8px 0',\n                                            maxHeight: '50px',\n                                            backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\n                                            color: 'white',\n                                            fontWeight: 'bold',\n                                            borderRadius: '10px',\n                                            ...provided.draggableProps.style\n                                          }}                                      \n                                        >\n                                          <div>\n                                            {item.content}\n                                          </div>\n                                      </div>\n                                    )\n                                  }}\n                                </Draggable>\n                              </div>\n                            )\n                          })}\n                          {provided.placeholder}\n                          <p style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => {setCardPopup(true)}} >➕ Add new card</p>\n                      </div>\n                    )\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          )})}\n          <button onClick={() => {setListPopup(true)}} > Add new list </button>\n        </DragDropContext>\n                </div>*/}\n      <div>\n        {cards.map((value) => {\n          return(\n            <div>\n              {value.title}\n            </div>\n          )\n        })}\n      </div>\n\n      <Popup trigger={listPopup} setTrigger={setListPopup}>\n        <form onSubmit={addList}>\n          <label>List Title</label>\n          <input\n            autoComplete='off'\n            type=\"text\"\n            value={listTitle}\n            onChange={(e) => {\n              setListTitle(e.target.value)\n            }}\n          />\n          <br />\n          <button type=\"submit\"> Add new list </button>\n        </form>\n      </Popup>\n\n      <Popup trigger={cardPopup} setTrigger={setCardPopup}>\n        <form onSubmit={addCard}>\n          <label>Title</label>\n          <input \n            autoComplete='off'\n            type='text'\n            value={cardTitle}\n            onChange={(e) => {\n              setCardTitle(e.target.value)\n            }}\n          />\n          <br />\n          <label>Content</label>\n          <input \n            autoComplete='off'\n            type='text'\n            value={cardContent}\n            onChange={(e) => {\n              setCardContent(e.target.value)\n            }}\n          />\n          <br />\n          <label>Platform</label>\n          <input \n            autoComplete='off'\n            type='text'\n            value={cardPlatform}\n            onChange={(e) => {\n              setCardPlatform(e.target.value)\n            }}\n          />\n          <br />\n          <button type=\"submit\" > Add New Card </button>\n        </form>\n      </Popup>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}