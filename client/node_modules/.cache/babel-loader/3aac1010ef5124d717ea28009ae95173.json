{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Desktop\\\\Sample Codebase\\\\Nestjs User Auth\\\\client\\\\src\\\\page\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport Popup from '../src/components/Popup';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport parse from 'html-react-parser';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': ['1', '2', false]\n  }], ['bold', 'italic', 'underline'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }], ['link', 'image']]\n};\nconst formats = ['size', 'bold', 'italic', 'underline', 'list', 'bullet'];\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction Index() {\n  _s();\n\n  useEffect(() => {\n    axios.get('http://localhost:3003/cards').then(response => {\n      setCardByUser(response.data);\n      console.log(response.data);\n    });\n    axios.get('http://localhost:3003/columns/cards').then(response => {\n      setColumnsFromDB(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  const [columnsFromDB, setColumnsFromDB] = useState([]);\n  const [cardByUser, setCardByUser] = useState([]);\n  const [cardPopup, setCardPopup] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [cardContent, setCardContent] = useState(\"\");\n  const [cardPlatform, setCardPlatform] = useState(\"\");\n  const [cardInfo, setCardInfo] = useState({\n    cardIdInfo: '',\n    cardTitleInfo: '',\n    cardContentInfo: ''\n  });\n  const [targetColumn, setTargetColumn] = useState(\"\");\n  const [listPopup, setListPopup] = useState(false);\n  const [listTitle, setListTitle] = useState(\"\");\n  const [infoPopup, setInfoPopup] = useState(false);\n\n  const onCardContent = value => {\n    setCardContent(value);\n  };\n\n  const addCard = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3003/cards', {\n      title: cardTitle,\n      content: cardContent,\n      platform: cardPlatform\n    }).then(res => {\n      if (!alert('Created card successful')) {\n        window.location.reload();\n      }\n\n      ;\n    });\n  };\n\n  const addList = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3003/columns', {\n      columnName: listTitle\n    }).then(res => {\n      if (!alert('Create list successful')) {\n        window.location.reload();\n      }\n\n      ;\n    });\n  };\n\n  const preAddCard = async id => {\n    await setTargetColumn(id);\n    setCardPopup(true);\n  };\n\n  const postAddCard = () => {\n    axios.post('http://localhost:3003/cards/withColumn', {\n      title: cardTitle,\n      content: cardContent,\n      platform: cardPlatform,\n      column: targetColumn\n    }).then(res => {\n      if (res.data.error) {\n        console.log(res.data.error);\n      } else {\n        alert('Create card inside column');\n      }\n    });\n  };\n\n  const showInfo = async (id, title, content) => {\n    await setCardInfo({\n      cardIdInfo: id,\n      cardTitleInfo: title,\n      cardContentInfo: content\n    });\n    setInfoPopup(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '40px',\n        textAlign: 'center',\n        color: '#242835',\n        fontSize: 50,\n        fontWeight: 800\n      },\n      children: \"content workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columnsFromDB, setColumnsFromDB),\n        children: [Object.entries(columnsFromDB).map(_ref => {\n          let [id, column] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: '#059A9D',\n                fontSize: 22\n              },\n              children: column.columnName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                margin: 8\n              },\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: id,\n                children: (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 10,\n                      width: 230,\n                      minHeight: 50,\n                      borderRadius: 10\n                    },\n                    children: [column.cards.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                maxHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\n                                color: 'white',\n                                fontWeight: 'bold',\n                                borderRadius: '10px',\n                                ...provided.draggableProps.style\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                onClick: () => {\n                                  showInfo(item.id, item.title, item.content);\n                                },\n                                children: item.title\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 209,\n                                columnNumber: 43\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 194,\n                              columnNumber: 39\n                            }, this);\n                          }\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 31\n                      }, this);\n                    }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: 'center',\n                        cursor: 'pointer'\n                      },\n                      onClick: () => {\n                        preAddCard(column.id);\n                      },\n                      children: \"\\u2795 Add new card\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this);\n                }\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setListPopup(true);\n          },\n          children: \" Add new list \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cards from database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), cardByUser.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [value.title, /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: value.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: value.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Columns from database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), columnsFromDB.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: value.columnName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: listPopup,\n      setTrigger: setListPopup,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addList,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"List Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: listTitle,\n          onChange: e => {\n            setListTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add new list \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: cardPopup,\n      setTrigger: setCardPopup,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postAddCard,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: cardTitle,\n          onChange: e => {\n            setCardTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          modules: modules,\n          formats: formats,\n          placeholder: 'Type something...',\n          value: cardContent,\n          onChange: onCardContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"text\",\n          value: cardPlatform,\n          onChange: e => {\n            setCardPlatform(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add New Card \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: infoPopup,\n      setTrigger: setInfoPopup,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: cardInfo.cardIdInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cardInfo.cardTitleInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cardInfo.cardContentInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: ``,\n          children: cardInfo.cardIdInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"U8i83g9ckTh1GK1wmyJHk/fP0X0=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/bryan/Desktop/Sample Codebase/Nestjs User Auth/client/src/page/Index.js"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","axios","Popup","ReactQuill","parse","Link","modules","toolbar","formats","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","Index","get","then","response","setCardByUser","data","console","log","setColumnsFromDB","columnsFromDB","cardByUser","cardPopup","setCardPopup","cardTitle","setCardTitle","cardContent","setCardContent","cardPlatform","setCardPlatform","cardInfo","setCardInfo","cardIdInfo","cardTitleInfo","cardContentInfo","targetColumn","setTargetColumn","listPopup","setListPopup","listTitle","setListTitle","infoPopup","setInfoPopup","onCardContent","value","addCard","e","preventDefault","post","title","content","platform","res","alert","window","location","reload","addList","columnName","preAddCard","id","postAddCard","error","showInfo","marginTop","textAlign","color","fontSize","fontWeight","display","justifyContent","height","Object","entries","map","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","borderRadius","cards","item","draggableProps","dragHandleProps","userSelect","maxHeight","backgroundColor","isDragging","style","placeholder","cursor","__html","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport Popup from '../src/components/Popup';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport parse from 'html-react-parser';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst modules = {\r\n  toolbar: [\r\n      [{ 'header': [ '1', '2', false ] }],\r\n      [ 'bold', 'italic', 'underline' ],\r\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n      [ 'link', 'image' ]\r\n  ]\r\n}\r\n\r\nconst formats = [\r\n  'size',\r\n  'bold', 'italic', 'underline',\r\n  'list', 'bullet'\r\n]\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId]\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [ removed ] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    })\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [ removed ] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n\r\nfunction Index() {\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3003/cards')\r\n      .then((response) => {\r\n        setCardByUser(response.data);\r\n        console.log(response.data);\r\n      });\r\n\r\n    axios\r\n      .get('http://localhost:3003/columns/cards')\r\n      .then((response) => {\r\n        setColumnsFromDB(response.data);\r\n        console.log(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const [ columnsFromDB, setColumnsFromDB ] = useState([]);\r\n  const [ cardByUser, setCardByUser ] = useState([]);\r\n\r\n  const [ cardPopup, setCardPopup ] = useState(false);\r\n  const [ cardTitle, setCardTitle ] = useState(\"\");\r\n  const [ cardContent, setCardContent ] = useState(\"\");\r\n  const [ cardPlatform, setCardPlatform ] = useState(\"\");\r\n  const [ cardInfo, setCardInfo ] = useState({\r\n    cardIdInfo: '',\r\n    cardTitleInfo: '',\r\n    cardContentInfo: ''\r\n  });\r\n\r\n  const [ targetColumn, setTargetColumn ] = useState(\"\");\r\n\r\n  const [ listPopup, setListPopup ] = useState(false);\r\n  const [ listTitle, setListTitle ] = useState(\"\");\r\n\r\n  const [ infoPopup, setInfoPopup ] = useState(false);\r\n\r\n  const onCardContent = (value) => {\r\n    setCardContent(value);\r\n  }\r\n\r\n  const addCard = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('http://localhost:3003/cards', {\r\n        title: cardTitle,\r\n        content: cardContent,\r\n        platform: cardPlatform\r\n      })\r\n      .then((res) => {\r\n        if(!alert('Created card successful')) {\r\n          window.location.reload();\r\n        };\r\n      });\r\n  };\r\n\r\n  const addList = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('http://localhost:3003/columns', {\r\n        columnName: listTitle\r\n      })\r\n      .then((res) => {\r\n        if(!alert('Create list successful')) {\r\n          window.location.reload();\r\n        };\r\n      });\r\n  }\r\n\r\n  const preAddCard = async (id) => {\r\n    await setTargetColumn(id);\r\n    setCardPopup(true);\r\n  };\r\n\r\n  const postAddCard = () => {\r\n    axios\r\n      .post('http://localhost:3003/cards/withColumn', {\r\n        title: cardTitle,\r\n        content: cardContent,\r\n        platform: cardPlatform,\r\n        column: targetColumn\r\n      })\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n        } else {\r\n          alert('Create card inside column')\r\n        }\r\n      });\r\n  }\r\n\r\n  const showInfo = async (id, title, content) => {\r\n    await setCardInfo({\r\n      cardIdInfo: id,\r\n      cardTitleInfo: title,\r\n      cardContentInfo: content\r\n    });\r\n    setInfoPopup(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <h1 style={{ marginTop: '40px',textAlign: 'center', color: '#242835', fontSize: 50, fontWeight: 800}}>content workflow</h1>\r\n      <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\r\n        <DragDropContext onDragEnd={result => onDragEnd(result, columnsFromDB, setColumnsFromDB)}>\r\n          {Object.entries(columnsFromDB).map(([id, column]) => {\r\n            return (\r\n              <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <h2 style={{ color: '#059A9D', fontSize: 22}}>{column.columnName}</h2>\r\n                <div style={{ margin: 8 }}>\r\n                  <Droppable droppableId={id} key={id}>\r\n                    {(provided, snapshot) => {\r\n                      return (\r\n                        <div \r\n                          {...provided.droppableProps}\r\n                          ref={provided.innerRef}\r\n                          style={{\r\n                            background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\r\n                            padding: 10,\r\n                            width: 230,\r\n                            minHeight: 50,\r\n                            borderRadius: 10\r\n                          }}\r\n                        >\r\n                          {column.cards.map((item, index) => {\r\n                            return (\r\n                              <div>\r\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                  {(provided, snapshot) => {\r\n                                    return (\r\n                                      <div ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                          style={{\r\n                                            userSelect: 'none',\r\n                                            padding: 16,\r\n                                            margin: '0 0 8px 0',\r\n                                            maxHeight: '50px',\r\n                                            backgroundColor: snapshot.isDragging ? '#263b4a' : '#456c86',\r\n                                            color: 'white',\r\n                                            fontWeight: 'bold',\r\n                                            borderRadius: '10px',\r\n                                            ...provided.draggableProps.style\r\n                                          }}                                      \r\n                                        >\r\n                                          <div onClick={() => {showInfo(item.id, item.title, item.content)}}>\r\n                                            {item.title}\r\n                                          </div>\r\n                                      </div>\r\n                                    )\r\n                                  }}\r\n                                </Draggable>\r\n                              </div>\r\n                            )\r\n                          })}\r\n                          {provided.placeholder}\r\n                          <p style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => {preAddCard(column.id)}} >➕ Add new card</p>\r\n                      </div>\r\n                    )\r\n                  }}\r\n                </Droppable>\r\n              </div>\r\n            </div>\r\n          )})}\r\n          <button onClick={() => {setListPopup(true)}} > Add new list </button>\r\n        </DragDropContext>\r\n      </div>\r\n      <div>\r\n        <p>Cards from database</p>\r\n        {cardByUser.map((value) => {\r\n          return(\r\n            <div>\r\n              {value.title}\r\n              <p dangerouslySetInnerHTML={{ __html: value.content }} ></p>\r\n              <p>{value.content}</p>\r\n            </div>\r\n          )\r\n        })}\r\n        <p>Columns from database</p>\r\n        {columnsFromDB.map((value) => {\r\n          return(\r\n            <div>\r\n              {value.columnName}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <Popup trigger={listPopup} setTrigger={setListPopup}>\r\n        <form onSubmit={addList}>\r\n          <label>List Title</label>\r\n          <input\r\n            autoComplete='off'\r\n            type=\"text\"\r\n            value={listTitle}\r\n            onChange={(e) => {\r\n              setListTitle(e.target.value)\r\n            }}\r\n          />\r\n          <br />\r\n          <button type=\"submit\"> Add new list </button>\r\n        </form>\r\n      </Popup>\r\n\r\n      <Popup trigger={cardPopup} setTrigger={setCardPopup}>\r\n        <form onSubmit={postAddCard}>\r\n          <label>Title</label>\r\n          <input \r\n            autoComplete='off'\r\n            type='text'\r\n            value={cardTitle}\r\n            onChange={(e) => {\r\n              setCardTitle(e.target.value)\r\n            }}\r\n          />\r\n          <br />\r\n          <label>Content</label>\r\n          <ReactQuill \r\n            theme='snow'\r\n            modules={modules}\r\n            formats={formats}\r\n            placeholder={'Type something...'}\r\n            value={cardContent}\r\n            onChange={onCardContent}\r\n          />\r\n          <br />\r\n          <label>Platform</label>\r\n          <input \r\n            autoComplete='off'\r\n            type='text'\r\n            value={cardPlatform}\r\n            onChange={(e) => {\r\n              setCardPlatform(e.target.value)\r\n            }}\r\n          />\r\n          <br />\r\n          <button type=\"submit\" > Add New Card </button>\r\n        </form>\r\n      </Popup>\r\n\r\n      <Popup trigger={infoPopup} setTrigger={setInfoPopup}>\r\n        <p>{cardInfo.cardIdInfo}</p>\r\n        <p>{cardInfo.cardTitleInfo}</p>\r\n        <p>{cardInfo.cardContentInfo}</p>\r\n        <button>\r\n          <Link to={``}>\r\n            {cardInfo.cardIdInfo}\r\n          </Link>\r\n        </button>\r\n      </Popup>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}